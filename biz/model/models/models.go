// Code generated by thriftgo (0.3.6). DO NOT EDIT.

package models

import (
	"fmt"
	"github.com/apache/thrift/lib/go/thrift"
	"howell/howell_api/biz/model/common"
)

type CpsRebateDiscounts struct {
	// 唯一ID
	ID *string `thrift:"id,1,optional" form:"id" json:"id,omitempty" query:"id"`
	// APP_ID
	AppID *string `thrift:"app_id,2,optional" form:"app_id" json:"app_id,omitempty" query:"app_id"`
	// 名称
	Name *string `thrift:"name,3,optional" form:"name" json:"name,omitempty" query:"name"`
	// 优惠类型
	CpsType *common.CpsType `thrift:"cps_type,4,optional" form:"cps_type" json:"cps_type,omitempty" query:"cps_type"`
	// 点击类型
	ActTpye *common.ActType `thrift:"act_tpye,5,optional" form:"act_tpye" json:"act_tpye,omitempty" query:"act_tpye"`
	// 点击链接
	ActURL *string `thrift:"act_url,6,optional" form:"act_url" json:"act_url,omitempty" query:"act_url"`
	// 展示图片
	Images *string `thrift:"images,7,optional" form:"images" json:"images,omitempty" query:"images"`
	// 扩展信息
	Extra *string `thrift:"extra,8,optional" form:"extra" json:"extra,omitempty" query:"extra"`
	// 状态
	Status *common.Status `thrift:"status,9,optional" form:"status" json:"status,omitempty" query:"status"`
	// 资源位
	Resource *string `thrift:"resource,10,optional" form:"resource" json:"resource,omitempty" query:"resource"`
}

func NewCpsRebateDiscounts() *CpsRebateDiscounts {
	return &CpsRebateDiscounts{}
}

var CpsRebateDiscounts_ID_DEFAULT string

func (p *CpsRebateDiscounts) GetID() (v string) {
	if !p.IsSetID() {
		return CpsRebateDiscounts_ID_DEFAULT
	}
	return *p.ID
}

var CpsRebateDiscounts_AppID_DEFAULT string

func (p *CpsRebateDiscounts) GetAppID() (v string) {
	if !p.IsSetAppID() {
		return CpsRebateDiscounts_AppID_DEFAULT
	}
	return *p.AppID
}

var CpsRebateDiscounts_Name_DEFAULT string

func (p *CpsRebateDiscounts) GetName() (v string) {
	if !p.IsSetName() {
		return CpsRebateDiscounts_Name_DEFAULT
	}
	return *p.Name
}

var CpsRebateDiscounts_CpsType_DEFAULT common.CpsType

func (p *CpsRebateDiscounts) GetCpsType() (v common.CpsType) {
	if !p.IsSetCpsType() {
		return CpsRebateDiscounts_CpsType_DEFAULT
	}
	return *p.CpsType
}

var CpsRebateDiscounts_ActTpye_DEFAULT common.ActType

func (p *CpsRebateDiscounts) GetActTpye() (v common.ActType) {
	if !p.IsSetActTpye() {
		return CpsRebateDiscounts_ActTpye_DEFAULT
	}
	return *p.ActTpye
}

var CpsRebateDiscounts_ActURL_DEFAULT string

func (p *CpsRebateDiscounts) GetActURL() (v string) {
	if !p.IsSetActURL() {
		return CpsRebateDiscounts_ActURL_DEFAULT
	}
	return *p.ActURL
}

var CpsRebateDiscounts_Images_DEFAULT string

func (p *CpsRebateDiscounts) GetImages() (v string) {
	if !p.IsSetImages() {
		return CpsRebateDiscounts_Images_DEFAULT
	}
	return *p.Images
}

var CpsRebateDiscounts_Extra_DEFAULT string

func (p *CpsRebateDiscounts) GetExtra() (v string) {
	if !p.IsSetExtra() {
		return CpsRebateDiscounts_Extra_DEFAULT
	}
	return *p.Extra
}

var CpsRebateDiscounts_Status_DEFAULT common.Status

func (p *CpsRebateDiscounts) GetStatus() (v common.Status) {
	if !p.IsSetStatus() {
		return CpsRebateDiscounts_Status_DEFAULT
	}
	return *p.Status
}

var CpsRebateDiscounts_Resource_DEFAULT string

func (p *CpsRebateDiscounts) GetResource() (v string) {
	if !p.IsSetResource() {
		return CpsRebateDiscounts_Resource_DEFAULT
	}
	return *p.Resource
}

var fieldIDToName_CpsRebateDiscounts = map[int16]string{
	1:  "id",
	2:  "app_id",
	3:  "name",
	4:  "cps_type",
	5:  "act_tpye",
	6:  "act_url",
	7:  "images",
	8:  "extra",
	9:  "status",
	10: "resource",
}

func (p *CpsRebateDiscounts) IsSetID() bool {
	return p.ID != nil
}

func (p *CpsRebateDiscounts) IsSetAppID() bool {
	return p.AppID != nil
}

func (p *CpsRebateDiscounts) IsSetName() bool {
	return p.Name != nil
}

func (p *CpsRebateDiscounts) IsSetCpsType() bool {
	return p.CpsType != nil
}

func (p *CpsRebateDiscounts) IsSetActTpye() bool {
	return p.ActTpye != nil
}

func (p *CpsRebateDiscounts) IsSetActURL() bool {
	return p.ActURL != nil
}

func (p *CpsRebateDiscounts) IsSetImages() bool {
	return p.Images != nil
}

func (p *CpsRebateDiscounts) IsSetExtra() bool {
	return p.Extra != nil
}

func (p *CpsRebateDiscounts) IsSetStatus() bool {
	return p.Status != nil
}

func (p *CpsRebateDiscounts) IsSetResource() bool {
	return p.Resource != nil
}

func (p *CpsRebateDiscounts) Read(iprot thrift.TProtocol) (err error) {

	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 2:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField2(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 3:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField3(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 4:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField4(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 5:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField5(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 6:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField6(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 7:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField7(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 8:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField8(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 9:
			if fieldTypeId == thrift.I32 {
				if err = p.ReadField9(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		case 10:
			if fieldTypeId == thrift.STRING {
				if err = p.ReadField10(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_CpsRebateDiscounts[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *CpsRebateDiscounts) ReadField1(iprot thrift.TProtocol) error {

	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.ID = &v
	}
	return nil
}
func (p *CpsRebateDiscounts) ReadField2(iprot thrift.TProtocol) error {

	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.AppID = &v
	}
	return nil
}
func (p *CpsRebateDiscounts) ReadField3(iprot thrift.TProtocol) error {

	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Name = &v
	}
	return nil
}
func (p *CpsRebateDiscounts) ReadField4(iprot thrift.TProtocol) error {

	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.CpsType = &v
	}
	return nil
}
func (p *CpsRebateDiscounts) ReadField5(iprot thrift.TProtocol) error {

	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.ActTpye = &v
	}
	return nil
}
func (p *CpsRebateDiscounts) ReadField6(iprot thrift.TProtocol) error {

	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.ActURL = &v
	}
	return nil
}
func (p *CpsRebateDiscounts) ReadField7(iprot thrift.TProtocol) error {

	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Images = &v
	}
	return nil
}
func (p *CpsRebateDiscounts) ReadField8(iprot thrift.TProtocol) error {

	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Extra = &v
	}
	return nil
}
func (p *CpsRebateDiscounts) ReadField9(iprot thrift.TProtocol) error {

	if v, err := iprot.ReadI32(); err != nil {
		return err
	} else {
		tmp := common.Status(v)
		p.Status = &tmp
	}
	return nil
}
func (p *CpsRebateDiscounts) ReadField10(iprot thrift.TProtocol) error {

	if v, err := iprot.ReadString(); err != nil {
		return err
	} else {
		p.Resource = &v
	}
	return nil
}

func (p *CpsRebateDiscounts) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("CpsRebateDiscounts"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
		if err = p.writeField2(oprot); err != nil {
			fieldId = 2
			goto WriteFieldError
		}
		if err = p.writeField3(oprot); err != nil {
			fieldId = 3
			goto WriteFieldError
		}
		if err = p.writeField4(oprot); err != nil {
			fieldId = 4
			goto WriteFieldError
		}
		if err = p.writeField5(oprot); err != nil {
			fieldId = 5
			goto WriteFieldError
		}
		if err = p.writeField6(oprot); err != nil {
			fieldId = 6
			goto WriteFieldError
		}
		if err = p.writeField7(oprot); err != nil {
			fieldId = 7
			goto WriteFieldError
		}
		if err = p.writeField8(oprot); err != nil {
			fieldId = 8
			goto WriteFieldError
		}
		if err = p.writeField9(oprot); err != nil {
			fieldId = 9
			goto WriteFieldError
		}
		if err = p.writeField10(oprot); err != nil {
			fieldId = 10
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *CpsRebateDiscounts) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetID() {
		if err = oprot.WriteFieldBegin("id", thrift.STRING, 1); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.ID); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *CpsRebateDiscounts) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetAppID() {
		if err = oprot.WriteFieldBegin("app_id", thrift.STRING, 2); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.AppID); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 2 end error: ", p), err)
}

func (p *CpsRebateDiscounts) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetName() {
		if err = oprot.WriteFieldBegin("name", thrift.STRING, 3); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.Name); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 3 end error: ", p), err)
}

func (p *CpsRebateDiscounts) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetCpsType() {
		if err = oprot.WriteFieldBegin("cps_type", thrift.STRING, 4); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.CpsType); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 4 end error: ", p), err)
}

func (p *CpsRebateDiscounts) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetActTpye() {
		if err = oprot.WriteFieldBegin("act_tpye", thrift.STRING, 5); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.ActTpye); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 5 end error: ", p), err)
}

func (p *CpsRebateDiscounts) writeField6(oprot thrift.TProtocol) (err error) {
	if p.IsSetActURL() {
		if err = oprot.WriteFieldBegin("act_url", thrift.STRING, 6); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.ActURL); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 6 end error: ", p), err)
}

func (p *CpsRebateDiscounts) writeField7(oprot thrift.TProtocol) (err error) {
	if p.IsSetImages() {
		if err = oprot.WriteFieldBegin("images", thrift.STRING, 7); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.Images); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 7 end error: ", p), err)
}

func (p *CpsRebateDiscounts) writeField8(oprot thrift.TProtocol) (err error) {
	if p.IsSetExtra() {
		if err = oprot.WriteFieldBegin("extra", thrift.STRING, 8); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.Extra); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 8 end error: ", p), err)
}

func (p *CpsRebateDiscounts) writeField9(oprot thrift.TProtocol) (err error) {
	if p.IsSetStatus() {
		if err = oprot.WriteFieldBegin("status", thrift.I32, 9); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteI32(int32(*p.Status)); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 9 end error: ", p), err)
}

func (p *CpsRebateDiscounts) writeField10(oprot thrift.TProtocol) (err error) {
	if p.IsSetResource() {
		if err = oprot.WriteFieldBegin("resource", thrift.STRING, 10); err != nil {
			goto WriteFieldBeginError
		}
		if err := oprot.WriteString(*p.Resource); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 10 end error: ", p), err)
}

func (p *CpsRebateDiscounts) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CpsRebateDiscounts(%+v)", *p)

}
